// Generated by CoffeeScript 1.3.3
(function() {
  var OAuth, async, linkedinClient, request;

  async = require('async');

  request = require('request');

  OAuth = require('oauth').OAuth;

  linkedinClient = function(keys) {
    var oauth, self;
    self = this;
    this.apiKey = keys.apiKey;
    this.secretKey = keys.secretKey;
    oauth = new OAuth(null, null, this.apiKey, this.secretKey, '1.0', null, 'HMAC-SHA1');
    this.requestFunctions = {
      contacts: function(tokens, cb) {
        return oauth.get('http://api.linkedin.com/v1/people/~/connections?format=json', tokens.access_token, tokens.access_token_secret, function(err, data) {
          var _ref;
          if (err) {
            return cb(null, {error: new Error((_ref = err.data) != null ? _ref : err)});
          }
          data = JSON.parse(data);
          return async.map(data.values, function(entry, cb) {
            var contact;
            contact = {
              id: entry.id,
              name: "" + entry.firstName + " " + entry.lastName,
              picture: entry.pictureUrl,
              entry: entry
            };
            return cb(null, contact);
          }, cb);
        });
      },
      details: function(tokens, cb) {
        return oauth.get('http://api.linkedin.com/v1/people/~:(id,first-name,last-name,industry,picture-url)?format=json', tokens.access_token, tokens.access_token_secret, function(err, data) {
          var _ref;
          if (err) {
            return cb(null, {error: new Error((_ref = err.data) != null ? _ref : err)});
          }
          data = JSON.parse(data);
          data.name = "" + data.firstName + " " + data.lastName;
          data.picture = data.pictureUrl;
          return cb(null, data);
        });
      }
    };
  };

  module.exports = linkedinClient;

}).call(this);
