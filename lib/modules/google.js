// Generated by CoffeeScript 1.3.3
(function() {
  var OAuth, async, googleClient;

  async = require('async');

  OAuth = require('oauth').OAuth;

  googleClient = function(keys) {
    var oauth, self;
    self = this;
    this.consumerKey = keys.consumerKey;
    this.consumerSecret = keys.consumerSecret;
    oauth = new OAuth(null, null, this.consumerKey, this.consumerSecret, '2.0', null, 'HMAC-SHA1');
    oauth._headers['GData-Version'] = '3.0';
    this.requestFunctions = {
      contacts: function(tokens, cb) {
        return oauth.get('https://www.google.com/m8/feeds/contacts/default/full?alt=json&max-results=10000', tokens.access_token, tokens.access_token_secret, function(err, data, res) {
          var getPrimaryEmail, _ref;
          if (err) {
            return cb(null, {
              error: new Error((_ref = err.data) != null ? _ref : err)
            });
          }
          getPrimaryEmail = function(contact, cb) {
            var emails;
            emails = contact.entry['gd$email'];
            if (!(emails != null)) {
              return cb(null, contact);
            }
            return async.detect(emails, function(email, cb) {
              return cb(email.primary);
            }, function(primaryEmail) {
              contact.email = primaryEmail ? primaryEmail.address : null;
              return cb(null, contact);
            });
          };
          data = JSON.parse(data);
          return async.map(data.feed.entry, function(entry, cb) {
            var contact;
            contact = {
              entry: entry,
              fullname: (entry['gd$name'] != null) && (entry['gd$name']['gd$fullName'] != null) ? entry['gd$name']['gd$fullName']['$t'] : null
            };
            return getPrimaryEmail(contact, cb);
          }, cb);
        });
      },
      details: function(tokens, cb) {
        return oauth.get('https://www.googleapis.com/oauth2/v1/userinfo?alt=json', tokens.access_token, tokens.access_token_secret, function(err, data, res) {
          var _ref;
          if (err) {
            return cb(null, {
              error: new Error((_ref = err.data) != null ? _ref : err)
            });
          }
          return cb(null, JSON.parse(data));
        });
      }
    };
  };

  module.exports = googleClient;

}).call(this);
